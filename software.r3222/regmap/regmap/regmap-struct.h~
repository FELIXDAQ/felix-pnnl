//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************
//  DO NOT EDIT THIS FILE
//  
//  This file was generated from template 'src/regmap-struct.h.template'
//  and register map ../../firmware/sources/templates/registers-3.2.yaml, version 3.2
//  by the script 'wuppercodegen', version: 0.7.0,
//  using the following commandline:
//  
//  ../wuppercodegen/wuppercodegen/cli.py ../../firmware/sources/templates/registers-3.2.yaml src/regmap-struct.h.template regmap/regmap-struct.h
//  
//  Please do NOT edit this file, but edit the source file at 'src/regmap-struct.h.template'
//  
//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************
//  ***************************************************************************


#ifndef REGMAP_STRUCT_H
#define REGMAP_STRUCT_H

#include <sys/types.h>

#include "regmap/regmap-common.h"

#ifdef __cplusplus
extern "C" {
#endif

/**************************************/
/* Bitfields                          */
/**************************************/

typedef struct
{
  volatile u_long DESCRIPTORS              :  8;  /* bits   7: 0 */
  volatile u_long INTERRUPTS               :  8;  /* bits  15: 8 */
} flxcard_generic_constants_t;

typedef struct
{
  volatile u_long TTC_TEST_MODE            :  1;  /* bits   0: 0 */
  volatile u_long GENERATE_TTC_EMU         :  1;  /* bits   1: 1 */
} flxcard_ttc_emu_const_t;

typedef struct
{
  volatile u_long DATAIN                   :  8;  /* bits   7: 0 */
  volatile u_long FULL                     :  1;  /* bits   8: 8 */
} flxcard_fh_ic_fifo_t;

typedef struct
{
  volatile u_long DATAOUT                  :  8;  /* bits   7: 0 */
  volatile u_long EMPTY                    :  1;  /* bits   8: 8 */
} flxcard_th_ic_fifo_t;

typedef struct
{
  volatile u_long TOHOST                   :  1;  /* bits   0: 0 */
  volatile u_long TOFRONTEND               :  1;  /* bits   1: 1 */
} flxcard_gbt_emu_ena_t;

typedef struct
{
  volatile u_long WRDATA                   : 16;  /* bits  15: 0 */
  volatile u_long unused0                  : 16;  /* bits  31:16 */
  volatile u_long WRADDR                   : 14;  /* bits  45:32 */
} flxcard_gbt_emu_config_t;

typedef struct
{
  volatile u_long DESMUX_USE_SW            :  1;  /* bits   0: 0 */
  volatile u_long RX_ALIGN_SW              :  1;  /* bits   1: 1 */
  volatile u_long RX_ALIGN_TB_SW           :  1;  /* bits   2: 2 */
} flxcard_gbt_mode_ctrl_t;

typedef struct
{
  volatile u_long M1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long M2312                    : 12;  /* bits  27:16 */
  volatile u_long unused1                  :  4;  /* bits  31:28 */
  volatile u_long S1100                    : 12;  /* bits  43:32 */
  volatile u_long unused2                  :  4;  /* bits  47:44 */
  volatile u_long S2312                    : 12;  /* bits  59:48 */
} flxcard_gbt_rxslide_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_txusrrdy_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rxusrrdy_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long B0200                    :  3;  /* bits  14:12 */
  volatile u_long unused0                  :  1;  /* bits  15:15 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
  volatile u_long B0503                    :  3;  /* bits  30:28 */
} flxcard_gbt_gttx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_gtrx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long B0200                    :  3;  /* bits  14:12 */
  volatile u_long unused0                  :  1;  /* bits  15:15 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
  volatile u_long B0503                    :  3;  /* bits  30:28 */
} flxcard_gbt_pll_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long B0200                    :  3;  /* bits  14:12 */
  volatile u_long unused0                  :  1;  /* bits  15:15 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
  volatile u_long B0503                    :  3;  /* bits  30:28 */
} flxcard_gbt_soft_tx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long B0200                    :  3;  /* bits  14:12 */
  volatile u_long unused0                  :  1;  /* bits  15:15 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
  volatile u_long B0503                    :  3;  /* bits  30:28 */
} flxcard_gbt_soft_rx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_odd_even_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_topbot_t;

typedef struct
{
  volatile u_long B2300                    : 24;  /* bits  23: 0 */
  volatile u_long unused0                  :  8;  /* bits  31:24 */
  volatile u_long B4724                    : 24;  /* bits  55:32 */
} flxcard_gbt_data_txformat_t;

typedef struct
{
  volatile u_long B2300                    : 24;  /* bits  23: 0 */
  volatile u_long unused0                  :  8;  /* bits  31:24 */
  volatile u_long B4724                    : 24;  /* bits  55:32 */
} flxcard_gbt_data_rxformat_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_tx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rx_reset_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_tx_tc_method_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_outmux_sel_t;

typedef struct
{
  volatile u_long PLL_SEL                  :  1;  /* bits   0: 0 */
  volatile u_long RX_CLK_SEL               :  1;  /* bits   1: 1 */
  volatile u_long GTHREFCLK_SEL            :  1;  /* bits   2: 2 */
  volatile u_long RESERVED                 : 13;  /* bits  15: 3 */
  volatile u_long GTH_IP_VERSION           : 16;  /* bits  31:16 */
  volatile u_long GBT_VERSION              : 16;  /* bits  47:32 */
  volatile u_long DATE                     : 16;  /* bits  63:48 */
} flxcard_gbt_version_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_txreset_done_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rxreset_done_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_txfsmreset_done_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rxfsmreset_done_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_cpll_fbclk_lost_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long B0200                    :  3;  /* bits  14:12 */
  volatile u_long unused0                  :  1;  /* bits  15:15 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
  volatile u_long B0503                    :  3;  /* bits  30:28 */
} flxcard_gbt_cpll_lock_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rxcdr_lock_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_clk_sampled_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rx_is_header_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rx_is_data_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_rx_header_found_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_alignment_done_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_out_mux_status_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_error_t;

typedef struct
{
  volatile u_long B1100                    : 12;  /* bits  11: 0 */
  volatile u_long unused0                  :  4;  /* bits  15:12 */
  volatile u_long B2312                    : 12;  /* bits  27:16 */
} flxcard_gbt_gbt_topbot_c_t;

typedef struct
{
  volatile u_long SYNC                     :  1;  /* bits   0: 0 */
  volatile u_long PD                       :  1;  /* bits   1: 1 */
  volatile u_long REF_SEL                  :  1;  /* bits   2: 2 */
} flxcard_hk_ctrl_cdce_t;

typedef struct
{
  volatile u_long CLKFREQ_SEL              :  1;  /* bits   0: 0 */
  volatile u_long CONFIG_TRIG              :  1;  /* bits   1: 1 */
} flxcard_hk_ctrl_i2c_t;

typedef struct
{
  volatile u_long PLL_LOCK                 :  1;  /* bits   0: 0 */
  volatile u_long OSC_SEL                  :  1;  /* bits   1: 1 */
  volatile u_long AUTOMATIC_CLOCK_SWITCH_ENABLED :  1;  /* bits   2: 2 */
} flxcard_mmcm_main_t;

typedef struct
{
  volatile u_long I2C_ACK_ERROR            :  1;  /* bits   0: 0 */
  volatile u_long CDCE_PLL_LOCK            :  1;  /* bits   1: 1 */
} flxcard_hk_mon_t;

typedef struct
{
  volatile u_long SPI_DIN                  : 32;  /* bits  31: 0 */
  volatile u_long SPI_FULL                 :  1;  /* bits  32:32 */
} flxcard_spi_wr_t;

typedef struct
{
  volatile u_long SPI_DOUT                 : 32;  /* bits  31: 0 */
  volatile u_long SPI_EMPTY                :  1;  /* bits  32:32 */
} flxcard_spi_rd_t;

typedef struct
{
  volatile u_long READ_NOT_WRITE           :  1;  /* bits   0: 0 */
  volatile u_long SLAVE_ADDRESS            :  7;  /* bits   7: 1 */
  volatile u_long DATA_BYTE1               :  8;  /* bits  15: 8 */
  volatile u_long DATA_BYTE2               :  8;  /* bits  23:16 */
  volatile u_long WRITE_2BYTES             :  1;  /* bits  24:24 */
  volatile u_long I2C_FULL                 :  1;  /* bits  25:25 */
} flxcard_i2c_wr_t;

typedef struct
{
  volatile u_long I2C_DOUT                 :  8;  /* bits   7: 0 */
  volatile u_long I2C_EMPTY                :  1;  /* bits   8: 8 */
} flxcard_i2c_rd_t;

typedef struct
{
  volatile u_long ENA                      :  1;  /* bits   0: 0 */
  volatile u_long SEL                      :  1;  /* bits   1: 1 */
} flxcard_ttc_emu_t;



/**************************************/
/* Structs for arrays                 */
/**************************************/



typedef struct
{
  volatile u_long TH;
  volatile u_long unused0;
  volatile u_long FH;
  volatile u_long unused1;
} flxcard_cr_gbt_mon_t;

typedef struct
{
  flxcard_fh_ic_fifo_t FH;
  volatile u_long unused0;
  flxcard_th_ic_fifo_t TH;
  volatile u_long unused1;
} flxcard_ic_fifos_t;

typedef struct
{
  volatile u_long FH;
  volatile u_long unused0;
} flxcard_egroup_fh_t;

typedef struct
{
  volatile u_long TH;
  volatile u_long unused0;
} flxcard_egroup_th_t;

typedef struct
{
  flxcard_egroup_th_t EGROUP_TH[7];
  flxcard_egroup_fh_t EGROUP_FH[5];
} flxcard_cr_gbt_ctrl_t;


/**************************************/
/* Main struct                        */
/**************************************/

typedef struct
{
/* Bar2 */
/* GenericBoardInformation */
  volatile u_long                REG_MAP_VERSION;               /* 0x0000 - 0x0007 (8) */
  u_char                         unused0[8];                    /* 0x0008 - 0x000F (8) */

  volatile u_long                BOARD_ID_TIMESTAMP;            /* 0x0010 - 0x0017 (8) */
  u_char                         unused1[8];                    /* 0x0018 - 0x001F (8) */

  volatile u_long                BOARD_ID_SVN;                  /* 0x0020 - 0x0027 (8) */
  u_char                         unused2[8];                    /* 0x0028 - 0x002F (8) */

  volatile u_long                STATUS_LEDS;                   /* 0x0030 - 0x0037 (8) */
  u_char                         unused3[8];                    /* 0x0038 - 0x003F (8) */

  flxcard_generic_constants_t    GENERIC_CONSTANTS;             /* 0x0040 - 0x0047 (8) */
  u_char                         unused4[8];                    /* 0x0048 - 0x004F (8) */

  volatile u_long                NUM_OF_CHANNELS;               /* 0x0050 - 0x0057 (8) */
  u_char                         unused5[8];                    /* 0x0058 - 0x005F (8) */

  volatile u_long                CARD_TYPE;                     /* 0x0060 - 0x0067 (8) */
  u_char                         unused6[8];                    /* 0x0068 - 0x006F (8) */

  volatile u_long                GBT_MAPPING;                   /* 0x0070 - 0x0077 (8) */
  u_char                         unused7[8];                    /* 0x0078 - 0x007F (8) */

  volatile u_long                GENERATE_GBT;                  /* 0x0080 - 0x0087 (8) */
  u_char                         unused8[8];                    /* 0x0088 - 0x008F (8) */

  volatile u_long                OPTO_TRX_NUM;                  /* 0x0090 - 0x0097 (8) */
  u_char                         unused9[8];                    /* 0x0098 - 0x009F (8) */

  flxcard_ttc_emu_const_t        TTC_EMU_CONST;                 /* 0x00A0 - 0x00A7 (8) */
  u_char                         unused10[8];                   /* 0x00A8 - 0x00AF (8) */

  volatile u_long                CR_INTERNAL_LOOPBACK_MODE;     /* 0x00B0 - 0x00B7 (8) */
  u_char                         unused11[8];                   /* 0x00B8 - 0x00BF (8) */

  volatile u_long                INCLUDE_EPROC16;               /* 0x00C0 - 0x00C7 (8) */
  u_char                         unused12[8];                   /* 0x00C8 - 0x00CF (8) */

  volatile u_long                WIDE_MODE;                     /* 0x00D0 - 0x00D7 (8) */
  u_char                         unused13[8];                   /* 0x00D8 - 0x00DF (8) */

  volatile u_long                DEBUG_MODE;                    /* 0x00E0 - 0x00E7 (8) */
  u_char                         unused14[8];                   /* 0x00E8 - 0x00EF (8) */

  u_char                         unused15[0x0F10];              /* 0x00F0 - 0x0FFF (3856) */

/* CentralRouterControls */
  volatile u_long                CR_TH_UPDATE_CTRL;             /* 0x1000 - 0x1007 (8) */
  u_char                         unused16[8];                   /* 0x1008 - 0x100F (8) */

  volatile u_long                CR_FH_UPDATE_CTRL;             /* 0x1010 - 0x1017 (8) */
  u_char                         unused17[8];                   /* 0x1018 - 0x101F (8) */

  volatile u_long                FH_IC_PACKET_RDY;              /* 0x1020 - 0x1027 (8) */
  u_char                         unused18[8];                   /* 0x1028 - 0x102F (8) */

  u_char                         unused19[0x00D0];              /* 0x1030 - 0x10FF (208) */

  flxcard_cr_gbt_ctrl_t          CR_GBT_CTRL[24];               /* 0x1100 - 0x22FF (4608) */

  u_char                         unused20[0x0100];              /* 0x2300 - 0x23FF (256) */

  flxcard_ic_fifos_t             IC_FIFOS[24];                  /* 0x2400 - 0x26FF (768) */

  u_char                         unused21[0x0900];              /* 0x2700 - 0x2FFF (2304) */

/* CentralRouterMonitors */
  flxcard_cr_gbt_mon_t           CR_GBT_MON[24];                /* 0x3000 - 0x32FF (768) */

  u_char                         unused22[0x0D00];              /* 0x3300 - 0x3FFF (3328) */

/* GBTEmulatorControlsAndMonitors */
  flxcard_gbt_emu_ena_t          GBT_EMU_ENA;                   /* 0x4000 - 0x4007 (8) */
  u_char                         unused23[8];                   /* 0x4008 - 0x400F (8) */

  volatile u_long                GBT_EMU_CONFIG_WE_ARRAY;       /* 0x4010 - 0x4017 (8) */
  u_char                         unused24[8];                   /* 0x4018 - 0x401F (8) */

  flxcard_gbt_emu_config_t       GBT_EMU_CONFIG;                /* 0x4020 - 0x4027 (8) */
  u_char                         unused25[8];                   /* 0x4028 - 0x402F (8) */

  u_char                         unused26[0x0FD0];              /* 0x4030 - 0x4FFF (4048) */

/* GBTWrapperControls */
  u_char                         unused27[0x0400];              /* 0x5000 - 0x53FF (1024) */

  volatile u_long                GBT_LOGIC_RESET;               /* 0x5400 - 0x5407 (8) */
  u_char                         unused28[8];                   /* 0x5408 - 0x540F (8) */

  volatile u_long                GBT_GENERAL_CTRL;              /* 0x5410 - 0x5417 (8) */
  u_char                         unused29[8];                   /* 0x5418 - 0x541F (8) */

  flxcard_gbt_mode_ctrl_t        GBT_MODE_CTRL;                 /* 0x5420 - 0x5427 (8) */
  u_char                         unused30[8];                   /* 0x5428 - 0x542F (8) */

  u_char                         unused31[0x0050];              /* 0x5430 - 0x547F (80) */

  flxcard_gbt_rxslide_t          GBT_RXSLIDE;                   /* 0x5480 - 0x5487 (8) */
  u_char                         unused32[8];                   /* 0x5488 - 0x548F (8) */

  flxcard_gbt_txusrrdy_t         GBT_TXUSRRDY;                  /* 0x5490 - 0x5497 (8) */
  u_char                         unused33[8];                   /* 0x5498 - 0x549F (8) */

  flxcard_gbt_rxusrrdy_t         GBT_RXUSRRDY;                  /* 0x54A0 - 0x54A7 (8) */
  u_char                         unused34[8];                   /* 0x54A8 - 0x54AF (8) */

  flxcard_gbt_gttx_reset_t       GBT_GTTX_RESET;                /* 0x54B0 - 0x54B7 (8) */
  u_char                         unused35[8];                   /* 0x54B8 - 0x54BF (8) */

  flxcard_gbt_gtrx_reset_t       GBT_GTRX_RESET;                /* 0x54C0 - 0x54C7 (8) */
  u_char                         unused36[8];                   /* 0x54C8 - 0x54CF (8) */

  flxcard_gbt_pll_reset_t        GBT_PLL_RESET;                 /* 0x54D0 - 0x54D7 (8) */
  u_char                         unused37[8];                   /* 0x54D8 - 0x54DF (8) */

  flxcard_gbt_soft_tx_reset_t    GBT_SOFT_TX_RESET;             /* 0x54E0 - 0x54E7 (8) */
  u_char                         unused38[8];                   /* 0x54E8 - 0x54EF (8) */

  flxcard_gbt_soft_rx_reset_t    GBT_SOFT_RX_RESET;             /* 0x54F0 - 0x54F7 (8) */
  u_char                         unused39[8];                   /* 0x54F8 - 0x54FF (8) */

  flxcard_gbt_odd_even_t         GBT_ODD_EVEN;                  /* 0x5500 - 0x5507 (8) */
  u_char                         unused40[8];                   /* 0x5508 - 0x550F (8) */

  flxcard_gbt_topbot_t           GBT_TOPBOT;                    /* 0x5510 - 0x5517 (8) */
  u_char                         unused41[8];                   /* 0x5518 - 0x551F (8) */

  volatile u_long                GBT_TX_TC_DLY_VALUE1;          /* 0x5520 - 0x5527 (8) */
  u_char                         unused42[8];                   /* 0x5528 - 0x552F (8) */

  volatile u_long                GBT_TX_TC_DLY_VALUE2;          /* 0x5530 - 0x5537 (8) */
  u_char                         unused43[8];                   /* 0x5538 - 0x553F (8) */

  volatile u_long                GBT_TX_OPT;                    /* 0x5540 - 0x5547 (8) */
  u_char                         unused44[8];                   /* 0x5548 - 0x554F (8) */

  volatile u_long                GBT_RX_OPT;                    /* 0x5550 - 0x5557 (8) */
  u_char                         unused45[8];                   /* 0x5558 - 0x555F (8) */

  flxcard_gbt_data_txformat_t    GBT_DATA_TXFORMAT;             /* 0x5560 - 0x5567 (8) */
  u_char                         unused46[8];                   /* 0x5568 - 0x556F (8) */

  flxcard_gbt_data_rxformat_t    GBT_DATA_RXFORMAT;             /* 0x5570 - 0x5577 (8) */
  u_char                         unused47[8];                   /* 0x5578 - 0x557F (8) */

  flxcard_gbt_tx_reset_t         GBT_TX_RESET;                  /* 0x5580 - 0x5587 (8) */
  u_char                         unused48[8];                   /* 0x5588 - 0x558F (8) */

  flxcard_gbt_rx_reset_t         GBT_RX_RESET;                  /* 0x5590 - 0x5597 (8) */
  u_char                         unused49[8];                   /* 0x5598 - 0x559F (8) */

  flxcard_gbt_tx_tc_method_t     GBT_TX_TC_METHOD;              /* 0x55A0 - 0x55A7 (8) */
  u_char                         unused50[8];                   /* 0x55A8 - 0x55AF (8) */

  flxcard_gbt_outmux_sel_t       GBT_OUTMUX_SEL;                /* 0x55B0 - 0x55B7 (8) */
  u_char                         unused51[8];                   /* 0x55B8 - 0x55BF (8) */

  u_char                         unused52[0x0040];              /* 0x55C0 - 0x55FF (64) */

  volatile u_long                GBT_DNLNK_FO_SEL;              /* 0x5600 - 0x5607 (8) */
  u_char                         unused53[8];                   /* 0x5608 - 0x560F (8) */

  volatile u_long                GBT_UPLNK_FO_SEL;              /* 0x5610 - 0x5617 (8) */
  u_char                         unused54[8];                   /* 0x5618 - 0x561F (8) */

  u_char                         unused55[0x09E0];              /* 0x5620 - 0x5FFF (2528) */

/* GBTWrapperMonitors */
  u_char                         unused56[0x0600];              /* 0x6000 - 0x65FF (1536) */

  flxcard_gbt_version_t          GBT_VERSION;                   /* 0x6600 - 0x6607 (8) */
  u_char                         unused57[8];                   /* 0x6608 - 0x660F (8) */

  u_char                         unused58[0x0070];              /* 0x6610 - 0x667F (112) */

  flxcard_gbt_txreset_done_t     GBT_TXRESET_DONE;              /* 0x6680 - 0x6687 (8) */
  u_char                         unused59[8];                   /* 0x6688 - 0x668F (8) */

  flxcard_gbt_rxreset_done_t     GBT_RXRESET_DONE;              /* 0x6690 - 0x6697 (8) */
  u_char                         unused60[8];                   /* 0x6698 - 0x669F (8) */

  flxcard_gbt_txfsmreset_done_t  GBT_TXFSMRESET_DONE;           /* 0x66A0 - 0x66A7 (8) */
  u_char                         unused61[8];                   /* 0x66A8 - 0x66AF (8) */

  flxcard_gbt_rxfsmreset_done_t  GBT_RXFSMRESET_DONE;           /* 0x66B0 - 0x66B7 (8) */
  u_char                         unused62[8];                   /* 0x66B8 - 0x66BF (8) */

  flxcard_gbt_cpll_fbclk_lost_t  GBT_CPLL_FBCLK_LOST;           /* 0x66C0 - 0x66C7 (8) */
  u_char                         unused63[8];                   /* 0x66C8 - 0x66CF (8) */

  flxcard_gbt_cpll_lock_t        GBT_CPLL_LOCK;                 /* 0x66D0 - 0x66D7 (8) */
  u_char                         unused64[8];                   /* 0x66D8 - 0x66DF (8) */

  flxcard_gbt_rxcdr_lock_t       GBT_RXCDR_LOCK;                /* 0x66E0 - 0x66E7 (8) */
  u_char                         unused65[8];                   /* 0x66E8 - 0x66EF (8) */

  flxcard_gbt_clk_sampled_t      GBT_CLK_SAMPLED;               /* 0x66F0 - 0x66F7 (8) */
  u_char                         unused66[8];                   /* 0x66F8 - 0x66FF (8) */

  flxcard_gbt_rx_is_header_t     GBT_RX_IS_HEADER;              /* 0x6700 - 0x6707 (8) */
  u_char                         unused67[8];                   /* 0x6708 - 0x670F (8) */

  flxcard_gbt_rx_is_data_t       GBT_RX_IS_DATA;                /* 0x6710 - 0x6717 (8) */
  u_char                         unused68[8];                   /* 0x6718 - 0x671F (8) */

  flxcard_gbt_rx_header_found_t  GBT_RX_HEADER_FOUND;           /* 0x6720 - 0x6727 (8) */
  u_char                         unused69[8];                   /* 0x6728 - 0x672F (8) */

  flxcard_gbt_alignment_done_t   GBT_ALIGNMENT_DONE;            /* 0x6730 - 0x6737 (8) */
  u_char                         unused70[8];                   /* 0x6738 - 0x673F (8) */

  flxcard_gbt_out_mux_status_t   GBT_OUT_MUX_STATUS;            /* 0x6740 - 0x6747 (8) */
  u_char                         unused71[8];                   /* 0x6748 - 0x674F (8) */

  flxcard_gbt_error_t            GBT_ERROR;                     /* 0x6750 - 0x6757 (8) */
  u_char                         unused72[8];                   /* 0x6758 - 0x675F (8) */

  flxcard_gbt_gbt_topbot_c_t     GBT_GBT_TOPBOT_C;              /* 0x6760 - 0x6767 (8) */
  u_char                         unused73[8];                   /* 0x6768 - 0x676F (8) */

  u_char                         unused74[0x0890];              /* 0x6770 - 0x6FFF (2192) */

/* HouseKeepingControlsAndMonitors */
  u_char                         unused75[0x0200];              /* 0x7000 - 0x71FF (512) */

  flxcard_hk_ctrl_cdce_t         HK_CTRL_CDCE;                  /* 0x7200 - 0x7207 (8) */
  u_char                         unused76[8];                   /* 0x7208 - 0x720F (8) */

  flxcard_hk_ctrl_i2c_t          HK_CTRL_I2C;                   /* 0x7210 - 0x7217 (8) */
  u_char                         unused77[8];                   /* 0x7218 - 0x721F (8) */

  u_char                         unused78[0x00E0];              /* 0x7220 - 0x72FF (224) */

  flxcard_mmcm_main_t            MMCM_MAIN;                     /* 0x7300 - 0x7307 (8) */
  u_char                         unused79[8];                   /* 0x7308 - 0x730F (8) */

  flxcard_hk_mon_t               HK_MON;                        /* 0x7310 - 0x7317 (8) */
  u_char                         unused80[8];                   /* 0x7318 - 0x731F (8) */

  u_char                         unused81[0x00E0];              /* 0x7320 - 0x73FF (224) */

  flxcard_spi_wr_t               SPI_WR;                        /* 0x7400 - 0x7407 (8) */
  u_char                         unused82[8];                   /* 0x7408 - 0x740F (8) */

  flxcard_spi_rd_t               SPI_RD;                        /* 0x7410 - 0x7417 (8) */
  u_char                         unused83[8];                   /* 0x7418 - 0x741F (8) */

  flxcard_i2c_wr_t               I2C_WR;                        /* 0x7420 - 0x7427 (8) */
  u_char                         unused84[8];                   /* 0x7428 - 0x742F (8) */

  flxcard_i2c_rd_t               I2C_RD;                        /* 0x7430 - 0x7437 (8) */
  u_char                         unused85[8];                   /* 0x7438 - 0x743F (8) */

  flxcard_ttc_emu_t              TTC_EMU;                       /* 0x7440 - 0x7447 (8) */
  u_char                         unused86[8];                   /* 0x7448 - 0x744F (8) */

  volatile u_long                FPGA_CORE_TEMP;                /* 0x7450 - 0x7457 (8) */
  u_char                         unused87[8];                   /* 0x7458 - 0x745F (8) */

  volatile u_long                FPGA_CORE_VCCINT;              /* 0x7460 - 0x7467 (8) */
  u_char                         unused88[8];                   /* 0x7468 - 0x746F (8) */

  volatile u_long                FPGA_CORE_VCCAUX;              /* 0x7470 - 0x7477 (8) */
  u_char                         unused89[8];                   /* 0x7478 - 0x747F (8) */

  volatile u_long                FPGA_CORE_VCCBRAM;             /* 0x7480 - 0x7487 (8) */
  u_char                         unused90[8];                   /* 0x7488 - 0x748F (8) */

  volatile u_long                LMK_LOCKED;                    /* 0x7490 - 0x7497 (8) */
  u_char                         unused91[8];                   /* 0x7498 - 0x749F (8) */

  u_char                         unused92[0x0060];              /* 0x74A0 - 0x74FF (96) */

  volatile u_long                DEBUG_PORT_GBT;                /* 0x7500 - 0x7507 (8) */
  u_char                         unused93[8];                   /* 0x7508 - 0x750F (8) */

  volatile u_long                DEBUG_PORT_CLK;                /* 0x7510 - 0x7517 (8) */
  u_char                         unused94[8];                   /* 0x7518 - 0x751F (8) */

  u_char                         unused95[0x02E0];              /* 0x7520 - 0x77FF (736) */

  volatile u_long                INT_TEST_2;                    /* 0x7800 - 0x7807 (8) */
  u_char                         unused96[8];                   /* 0x7808 - 0x780F (8) */

  volatile u_long                INT_TEST_3;                    /* 0x7810 - 0x7817 (8) */
  u_char                         unused97[8];                   /* 0x7818 - 0x781F (8) */

} flxcard_bar2_regs_t;




#ifdef __cplusplus
}
#endif

#endif /* REGMAP_STRUCT_H */